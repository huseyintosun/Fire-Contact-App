{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport firebase from './firebase';\nimport React, { useState, useEffect } from 'react';\nimport { successToastify } from './customToastify';\nexport const addInfo = info => {\n  const contactRef = firebase.database().ref(\"contact\");\n  contactRef.push(info);\n};\nexport const useFetch = () => {\n  _s();\n\n  const [contactList, setContactList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    const contactRef = firebase.database().ref(\"contact\");\n    contactRef.on(\"value\", snapshot => {\n      const contacts = snapshot.val();\n      const contactArray = [];\n\n      for (let id in contacts) {\n        contactArray.push({\n          id,\n          ...contacts[id]\n        });\n      }\n\n      setContactList(contactArray);\n      setIsLoading(false);\n    });\n  }, []);\n  return {\n    contactList,\n    isLoading\n  };\n};\n\n_s(useFetch, \"76fRF7pZ95qESF2RHzWgTlX56m8=\");\n\nexport const deleteHandler = id => {\n  const contactRef = firebase.database().ref(\"contact\").child(id);\n  contactRef.remove();\n  successToastify(\"Deleted Succesfully\");\n};\nexport const editHandler = info => {\n  const contactRef = firebase.database().ref(\"contact\").child(info.id);\n  contactRef.update(info);\n  successToastify(\"Updated Succesfully\");\n};","map":{"version":3,"sources":["/Users/serhatkoyuncu/Desktop/CLARUSWAY/FULL STACK/projects/Fire-Contact-App/src/utils/functions.js"],"names":["firebase","React","useState","useEffect","successToastify","addInfo","info","contactRef","database","ref","push","useFetch","contactList","setContactList","isLoading","setIsLoading","on","snapshot","contacts","val","contactArray","id","deleteHandler","child","remove","editHandler","update"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,eAAR,QAA8B,kBAA9B;AAIA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC7B,QAAMC,UAAU,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAnB;AACAF,EAAAA,UAAU,CAACG,IAAX,CAAgBJ,IAAhB;AACH,CAHM;AAKP,OAAO,MAAMK,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMR,UAAU,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAnB;AACAF,IAAAA,UAAU,CAACS,EAAX,CAAc,OAAd,EAAwBC,QAAD,IAAY;AAC/B,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,GAAT,EAAjB;AACA,YAAMC,YAAY,GAAG,EAArB;;AACA,WAAK,IAAIC,EAAT,IAAeH,QAAf,EAAyB;AACrBE,QAAAA,YAAY,CAACV,IAAb,CAAkB;AAACW,UAAAA,EAAD;AAAI,aAAGH,QAAQ,CAACG,EAAD;AAAf,SAAlB;AACH;;AACDR,MAAAA,cAAc,CAACO,YAAD,CAAd;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KARD;AASH,GAZQ,EAYN,EAZM,CAAT;AAaA,SAAO;AAACH,IAAAA,WAAD;AAAaE,IAAAA;AAAb,GAAP;AACH,CAlBM;;GAAMH,Q;;AAoBb,OAAO,MAAMW,aAAa,GAAID,EAAD,IAAQ;AACjC,QAAMd,UAAU,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,EAAmCc,KAAnC,CAAyCF,EAAzC,CAAnB;AACAd,EAAAA,UAAU,CAACiB,MAAX;AACApB,EAAAA,eAAe,CAAC,qBAAD,CAAf;AACH,CAJM;AAMP,OAAO,MAAMqB,WAAW,GAAInB,IAAD,IAAU;AACjC,QAAMC,UAAU,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,EAAmCc,KAAnC,CAAyCjB,IAAI,CAACe,EAA9C,CAAnB;AACAd,EAAAA,UAAU,CAACmB,MAAX,CAAkBpB,IAAlB;AACAF,EAAAA,eAAe,CAAC,qBAAD,CAAf;AACH,CAJM","sourcesContent":["import firebase from './firebase';\nimport React, { useState, useEffect } from 'react'\nimport {successToastify} from './customToastify'\n\n\n\nexport const addInfo = (info) => {\n    const contactRef = firebase.database().ref(\"contact\")\n    contactRef.push(info)\n}\n\nexport const useFetch = () => {\n    const [contactList, setContactList] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    \n    useEffect(() => {\n        setIsLoading(true);\n        const contactRef = firebase.database().ref(\"contact\")\n        contactRef.on(\"value\", (snapshot)=>{\n            const contacts = snapshot.val();\n            const contactArray = [];\n            for (let id in contacts) {\n                contactArray.push({id,...contacts[id]})\n            }\n            setContactList(contactArray)\n            setIsLoading(false)\n        })\n    }, [])\n    return {contactList,isLoading}\n}\n\nexport const deleteHandler = (id) => {\n    const contactRef = firebase.database().ref(\"contact\").child(id);\n    contactRef.remove();\n    successToastify(\"Deleted Succesfully\")\n}\n\nexport const editHandler = (info) => {\n    const contactRef = firebase.database().ref(\"contact\").child(info.id);\n    contactRef.update(info)\n    successToastify(\"Updated Succesfully\")\n}"]},"metadata":{},"sourceType":"module"}